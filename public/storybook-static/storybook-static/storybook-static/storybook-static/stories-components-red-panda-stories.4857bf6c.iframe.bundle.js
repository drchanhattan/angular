"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[670],{"./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>combineLatest});var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js"),_from__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),_util_identity__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"),_util_args__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),_util_createObject__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/createObject.js"),_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js");function combineLatest(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var scheduler=(0,_util_args__WEBPACK_IMPORTED_MODULE_5__.lI)(args),resultSelector=(0,_util_args__WEBPACK_IMPORTED_MODULE_5__.ms)(args),_a=(0,_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__.D)(args),observables=_a.args,keys=_a.keys;if(0===observables.length)return(0,_from__WEBPACK_IMPORTED_MODULE_2__.H)([],scheduler);var result=new _Observable__WEBPACK_IMPORTED_MODULE_0__.c(function combineLatestInit(observables,scheduler,valueTransform){void 0===valueTransform&&(valueTransform=_util_identity__WEBPACK_IMPORTED_MODULE_3__.D);return function(subscriber){maybeSchedule(scheduler,function(){for(var length=observables.length,values=new Array(length),active=length,remainingFirstValues=length,_loop_1=function(i){maybeSchedule(scheduler,function(){var source=(0,_from__WEBPACK_IMPORTED_MODULE_2__.H)(observables[i],scheduler),hasFirstValue=!1;source.subscribe((0,_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__._)(subscriber,function(value){values[i]=value,hasFirstValue||(hasFirstValue=!0,remainingFirstValues--),remainingFirstValues||subscriber.next(valueTransform(values.slice()))},function(){--active||subscriber.complete()}))},subscriber)},i=0;i<length;i++)_loop_1(i)},subscriber)}}(observables,scheduler,keys?function(values){return(0,_util_createObject__WEBPACK_IMPORTED_MODULE_6__.e)(keys,values)}:_util_identity__WEBPACK_IMPORTED_MODULE_3__.D));return resultSelector?result.pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_4__.I)(resultSelector)):result}function maybeSchedule(scheduler,execute,subscription){scheduler?(0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__.N)(subscription,scheduler,execute):execute()}},"./src/stories/components/red-panda.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{RedPanda:()=>RedPanda,__namedExportsOrder:()=>__namedExportsOrder,default:()=>red_panda_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var Sprite,common_module=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module.mjs"),debug_node=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js");class Panda{constructor(deltaX,deltaY,posX,posY,size){this.isflipped$=new BehaviorSubject.t(!1),this.isJumping$=new BehaviorSubject.t(!1),this.jumpHeight=10,this.speed=5,this.deltaX$=new BehaviorSubject.t(deltaX),this.deltaY$=new BehaviorSubject.t(deltaY),this.x=posX,this.y=posY,this.size=size}}!function(Sprite){Sprite.Idle="panda/idle.gif",Sprite.Run="panda/run.gif",Sprite.Jump="panda/jump.gif"}(Sprite||(Sprite={}));let RedPandaComponent=class RedPandaComponent{handleMouseMove(event){event.clientY>window.innerHeight-2*this.panda.size&&Math.abs(this.cursorX-event.clientX)>50&&(this.cursorX=event.clientX)}constructor(){this.hostClasses="absolute w-full select-none",this.cursorX=0,this.panda=new Panda(0,0,window.innerWidth/2-75,9999,150),this.sprite$=new BehaviorSubject.t(Sprite.Idle),this.jump$=new BehaviorSubject.t(!1),this.updateSprite(),this.animate()}get pandaStyle(){const{isflipped$,size,x,y}=this.panda;return`${`width: ${size}px;`} ${`height: ${size}px;`} ${`top: ${y-size}px;`} ${`left: ${x}px;`} ${`transform: scaleX(${isflipped$.value?-1:1});`}`}mouseover(value){this.jump$.next(value)}jump(){const{deltaX$,deltaY$,isflipped$,isJumping$,jumpHeight,speed}=this.panda;this.jump$.value&&!isJumping$.value&&(isJumping$.next(!0),deltaX$.next(isflipped$.value?-speed/2:speed/2),deltaY$.next(-jumpHeight))}updateSprite(){(0,combineLatest.z)([this.panda.deltaX$,this.panda.deltaY$,this.panda.isJumping$]).subscribe(([x,y,jumping])=>{this.sprite$.next(jumping?Sprite.Jump:0!==x?Sprite.Run:Sprite.Idle)})}animate(){const animateFrame=()=>{this.updateX(),this.updateY(),this.jump(),requestAnimationFrame(animateFrame)};requestAnimationFrame(animateFrame)}updateX(){this.updateDirection(),this.moveX()}updateDirection(){const{deltaX$,isflipped$,isJumping$,speed,size,x}=this.panda,windowWidth=window.innerWidth,pandaX=x+size/2,cursorDiff=this.cursorX-pandaX,negativeDiff=cursorDiff<0,tooFarLeft=windowWidth-pandaX>windowWidth-size,tooFarRight=windowWidth-pandaX<size;if(!isJumping$.value){const fixed=!(Math.abs(cursorDiff)<windowWidth/3)||tooFarLeft&&!negativeDiff||tooFarRight&&negativeDiff;deltaX$.next(fixed?0:negativeDiff?speed:-speed)}isflipped$.next(!tooFarLeft&&(!!tooFarRight||!negativeDiff))}moveX(){const moveLeft=this.panda.deltaX$.value<0,canMoveLeft=moveLeft&&this.panda.x>this.panda.size/2,canMoveRight=!moveLeft&&window.innerWidth-this.panda.size>this.panda.x+this.panda.size/2;this.panda.deltaX$.value&&(canMoveLeft||canMoveRight)&&(this.panda.x+=this.panda.deltaX$.value)}updateY(){this.moveY(),this.floorCollision()}moveY(){this.panda.deltaY$.next(this.panda.deltaY$.value+.25),this.panda.y+=this.panda.deltaY$.value}floorCollision(){const{deltaY$,isJumping$,size,y}=this.panda,floor=(document.querySelector("app-red-panda")?.clientHeight||0)/2+size/2;y>floor&&(this.panda.y=floor,deltaY$.next(0),isJumping$.next(!1))}static#_=this.ctorParameters=()=>[];static#_2=this.propDecorators={hostClasses:[{type:debug_node.g$6,args:["class"]}],handleMouseMove:[{type:debug_node.Z$l,args:["document:mousemove",["$event"]]}]}};RedPandaComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"app-red-panda",imports:[common_module.MD],template:'<div\n  class="absolute overflow-hidden"\n  (mouseover)="mouseover(true)"\n  (mouseleave)="mouseover(false)"\n  [style]="pandaStyle">\n  @if (sprite$ | async; as sprite) {\n    <img [ngClass]="{ hidden: sprite !== \'panda/jump.gif\' }" [src]="\'panda/jump.gif\'" />\n    <img [ngClass]="{ hidden: sprite !== \'panda/idle.gif\' }" [src]="\'panda/idle.gif\'" />\n    <img [ngClass]="{ hidden: sprite !== \'panda/run.gif\' }" [src]="\'panda/run.gif\'" />\n  }\n</div>\n'})],RedPandaComponent);const red_panda_stories={title:"Components/Panda",component:RedPandaComponent,decorators:[(0,dist.Iz)({imports:[RedPandaComponent]})],tags:["!autodocs"],render:args=>({props:args,template:'\n      <div class="relative h-80 w-full flex items-end bg-mat-black">\n        <app-red-panda class="mb-12"></app-red-panda>\n      </div>'})},RedPanda={},__namedExportsOrder=["RedPanda"];RedPanda.parameters={...RedPanda.parameters,docs:{...RedPanda.parameters?.docs,source:{originalSource:"{}",...RedPanda.parameters?.docs?.source}}}}}]);